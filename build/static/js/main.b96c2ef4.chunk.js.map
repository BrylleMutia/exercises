{"version":3,"sources":["App.module.css","components/navbar/Navbar.jsx","components/main/Main.jsx","components/exerciseTwo/ExerciseTwo.jsx","components/exerciseThree/ExerciseThree.jsx","App.js","index.js"],"names":["module","exports","Navbar","className","AppBar","position","Toolbar","style","display","flexDirection","alignItems","padding","Typography","variant","fontSize","fontWeight","Main","justifyContent","height","to","Button","marginBottom","color","onClick","ExerciseTwo","useState","isOpen","setIsOpen","itemsA","setItemsA","itemsB","setItemsB","dialogToggle","prev","setItems","e","target","name","value","toString","split","handleSubmit","preventDefault","Fragment","margin","Dialog","open","onClose","aria-labelledby","onSubmit","DialogTitle","id","DialogContent","TextField","label","type","fullWidth","onChange","DialogActions","marginTop","length","map","item","getRandomId","Math","floor","random","ExerciseThree","isOneOpen","setIsOneOpen","isTwoOpen","setIsTwoOpen","isThreeOpen","setIsThreeOpen","isFourOpen","setIsFourOpen","setName","ticket","setTicket","passengers","setPassengers","foundPassenger","setFoundPassenger","onFormChange","handleSubmitTwo","filter","passenger","textAlign","match","marginLeft","App","app","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b96c2ef4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2LS-l\",\"container\":\"App_container__2Uu4x\"};","import React from 'react';\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", padding: \"0.5rem\" }}>\r\n                    <Typography variant=\"title\" style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>EXERCISES</Typography>\r\n                    <Typography>Rene Rose Catubay</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", height: \"80vh\" }} >\r\n                <Link to=\"/two\"><Button style={{ marginBottom: \"1.5rem\" }} variant=\"contained\" color=\"primary\" onClick >Exercise 2</Button></Link>\r\n                <Link to=\"/three\"><Button variant=\"contained\" color=\"secondary\" >Exercise 3</Button></Link>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Main;","import React, { useState } from 'react';\r\n\r\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ExerciseTwo = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    \r\n    const [itemsA, setItemsA] = useState([]);\r\n    const [itemsB, setItemsB] = useState([]);\r\n\r\n    const dialogToggle = () => {\r\n        setIsOpen(prev => !prev);\r\n    }\r\n\r\n    const setItems = (e) => {\r\n        switch (e.target.name) {\r\n            case \"items-a\":\r\n                setItemsA(e.target.value.toString().split(\",\"));\r\n                break;\r\n            case \"items-b\":\r\n                setItemsB(e.target.value.toString().split(\",\"));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dialogToggle();\r\n    }\r\n\r\n    const exchangeItems = () => {\r\n        setItemsA([...itemsB]);\r\n        setItemsB([...itemsA]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/\"><Button variant=\"outlined\" color=\"primary\" style={{ margin: \"1rem 0 0 1rem\" }}>Back</Button></Link>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", height: \"80vh\" }} >\r\n            <Button variant=\"contained\" color=\"primary\" onClick={dialogToggle}>\r\n                #1: Add items for Array A & B\r\n            </Button>\r\n\r\n            <Dialog open={isOpen} onClose={dialogToggle} aria-labelledby=\"form-dialog-title\">\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <Typography>\r\n                            <span><strong>NOTE:</strong> Separate items by comma (,) and no space.</span>\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <TextField\r\n                            name=\"items-a\"\r\n                            margin=\"dense\"\r\n                            id=\"items-a\"\r\n                            label=\"Array A\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onChange={setItems}\r\n                        />\r\n                        <TextField\r\n                            name=\"items-b\"\r\n                            margin=\"dense\"\r\n                            id=\"items-b\"\r\n                            label=\"Array B\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onChange={setItems}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={dialogToggle} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" onClick={handleSubmit} color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n\r\n            <div style={{ display: \"flex\" }} >\r\n                <ul style={{ margin: \"0\", marginTop: \"1rem\", marginBottom: \"1rem\"  }} >\r\n                    <Typography style={{ fontWeight: \"700\" }}>Array A<br /></Typography>\r\n                    {!itemsA.length ? \"Array A is empty\" : itemsA.map(item => <li>{item}</li>)}\r\n                </ul>\r\n                <ul style={{ margin: \"0\", marginTop: \"1rem\", marginBottom: \"1rem\" }}><Typography style={{ fontWeight: \"700\" }}>Array B<br /></Typography>\r\n                    {!itemsA.length ? \"Array B is empty\" : itemsB.map(item => <li>{item}</li>)}\r\n                </ul>\r\n            </div>\r\n\r\n            {itemsA.length && itemsB.length ? <Button onClick={exchangeItems} variant=\"contained\" color=\"primary\" >Exchange Items for Array A & B</Button> : null}\r\n        </div></React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ExerciseTwo;","import React, { useState } from 'react';\r\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// GET RANDOM ID FOR TICKET\r\nconst getRandomId = () => {\r\n    return Math.floor(Math.random() * (1000000 - 500000)) + 500000;\r\n}\r\n\r\nconst ExerciseThree = () => {\r\n\r\n    // DIALOG BOX STATES\r\n    const [isOneOpen, setIsOneOpen] = useState(false);\r\n    const [isTwoOpen, setIsTwoOpen] = useState(false);\r\n    const [isThreeOpen, setIsThreeOpen] = useState(false);\r\n    const [isFourOpen, setIsFourOpen] = useState(false);\r\n\r\n    // CURRENT PASSENGER DETAILS\r\n    const [name, setName] = useState(\"\");\r\n    const [ticket, setTicket] = useState(getRandomId());\r\n\r\n    // ALL PASSENGERS DETAIL\r\n    const [passengers, setPassengers] = useState([]);\r\n\r\n    // PASSENGER FOUND\r\n    const [foundPassenger, setFoundPassenger] = useState([]);\r\n\r\n    const onFormChange = (e) => {\r\n        switch(e.target.name) {\r\n            case \"name\":\r\n                setName(e.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const dialogToggle = (id) => {\r\n        switch(id) {\r\n            case \"one\":\r\n                setIsOneOpen(prev => !prev);\r\n                break;\r\n            case \"two\":\r\n                setIsTwoOpen(prev => !prev);\r\n                break;\r\n            case \"three\":\r\n                setIsThreeOpen(prev => !prev);\r\n                setFoundPassenger([]);\r\n                break;\r\n            case \"four\":\r\n                setIsFourOpen(prev => !prev);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // FOR ADD RESERVATION\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPassengers(prev => [...prev, { name, ticket }]);\r\n        dialogToggle(\"one\");\r\n        setName(\"\");\r\n        setTicket(getRandomId());\r\n    }\r\n\r\n    // FOR CANCEL RESERVATION\r\n    const handleSubmitTwo = (e) => {\r\n        e.preventDefault();\r\n        setPassengers(prev => prev.filter(passenger => passenger.ticket.toString() !== name));\r\n        dialogToggle(\"two\");\r\n        setName(\"\");\r\n    }\r\n\r\n    // FOR CHECK TICKET \r\n    const handleSubmitThree = (e) => {\r\n        e.preventDefault();\r\n        const match = passengers.filter(passenger => passenger.ticket.toString() === name);\r\n        setFoundPassenger(match);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <Link to=\"/\"><Button variant=\"outlined\" color=\"primary\" style={{ margin: \"1rem 0 0 1rem\" }}>Back</Button></Link>\r\n            <div  style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", height: \"80vh\" }}>\r\n                <Button style={{ marginBottom: \"1rem\" }} onClick={() => dialogToggle(\"one\")} variant=\"contained\" color=\"primary\">Reserve a Ticket</Button>\r\n                <Button style={{ marginBottom: \"1rem\" }} onClick={() => dialogToggle(\"two\")} variant=\"contained\" color=\"primary\">Cancel a Reservation</Button>\r\n                <Button style={{ marginBottom: \"1rem\" }} onClick={() => dialogToggle(\"three\")} variant=\"contained\" color=\"primary\">Check Ticket</Button>\r\n                <Button style={{ marginBottom: \"1rem\" }} onClick={() => dialogToggle(\"four\")} variant=\"contained\" color=\"primary\">Show Passengers</Button>\r\n\r\n                {/* DIALOG FOR ADD RESERVATION */}\r\n                <Dialog open={isOneOpen} onClose={() => dialogToggle(\"one\")} aria-labelledby=\"form-dialog-title\">\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <Typography>\r\n                            Add reservation for next flight\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <TextField\r\n                            name=\"name\"\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Passenger's Name\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={onFormChange}\r\n                        />\r\n                        <div style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\r\n                            <h3>TICKET NO.</h3>\r\n                            <p>{ticket}</p>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => dialogToggle(\"one\")} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        {name && <Button type=\"submit\" onClick={handleSubmit} color=\"primary\">\r\n                            Add\r\n                        </Button>}\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            {/* DIALOG FOR CANCEL RESERVATION */}\r\n            <Dialog open={isTwoOpen} onClose={() => dialogToggle(\"two\")} aria-labelledby=\"form-dialog-title\">\r\n                <form onSubmit={handleSubmitTwo}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <Typography>\r\n                            Cancel reservation\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <TextField\r\n                            name=\"name\"\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Ticket No.\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={onFormChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => dialogToggle(\"two\")} color=\"primary\">\r\n                            Back\r\n                        </Button>\r\n                        {name && <Button type=\"submit\" onClick={handleSubmitTwo} color=\"primary\">\r\n                            Cancel Reservation\r\n                        </Button>}\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            {/* DIALOG FOR CHECK TICKET */}\r\n            <Dialog open={isThreeOpen} onClose={() => dialogToggle(\"three\")} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <Typography>\r\n                            Check ticket\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <TextField\r\n                            name=\"name\"\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Ticket No.\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={onFormChange}\r\n                        />\r\n                        {foundPassenger.length ? <div style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\r\n                            <h4>PASSENGER'S NAME</h4>\r\n                            <p>{foundPassenger.length ? foundPassenger[0].name : null}</p>\r\n                        </div> : null}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => dialogToggle(\"three\")} color=\"primary\">\r\n                            Back\r\n                        </Button>\r\n                        {name && <Button type=\"submit\" onClick={handleSubmitThree} color=\"primary\">\r\n                            Check ticket\r\n                        </Button>}\r\n                    </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* DIALOG FOR SHOW PASSENGERS */}\r\n            <Dialog open={isFourOpen} onClose={() => dialogToggle(\"four\")} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <Typography>\r\n                            Reserved passengers\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <ul style={{ marginLeft: \"0\" }}>\r\n                        {passengers.map(passenger => (\r\n                            <li><span style={{ fontWeight: \"700\", fontSize: \"1.2rem\" }}>{passenger.name}</span> (No. {passenger.ticket})</li>    \r\n                        ))}\r\n                        </ul>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => dialogToggle(\"four\")} color=\"primary\">\r\n                            Back\r\n                        </Button>\r\n                    </DialogActions>\r\n            </Dialog>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default ExerciseThree;","import React from \"react\";\nimport { app } from \"./App.module.css\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Main from \"./components/main/Main\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ExerciseTwo from \"./components/exerciseTwo/ExerciseTwo\";\nimport ExerciseThree from \"./components/exerciseThree/ExerciseThree\";\n\nconst App = () => {\n    return (\n        <div className={app}>\n            <Navbar />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Main} />\n                    <Route exact path=\"/two\" component={ExerciseTwo} />\n                    <Route exact path=\"/three\" component={ExerciseThree} />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}